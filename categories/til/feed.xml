<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIL on Space Looming</title>
    <link>https://www.gtdstudy.com/categories/til/</link>
    <description>Recent content in TIL on Space Looming</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.gtdstudy.com/categories/til/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Emacs 中综合使用 keep-lines 和 flush-lines 过滤多行文本</title>
      <link>https://www.gtdstudy.com/posts/emacs-keep-flush-lines/</link>
      <pubDate>Tue, 21 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/emacs-keep-flush-lines/</guid>
      <description>&lt;p&gt;如果不想写正则表达式，可以多次使用 keep-lines 和 flush-lines 来达到筛选包含某些关键字的文本行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;keep-lines&lt;/code&gt; 的意思就是，保留你输入关键字的文本行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;flush-lines&lt;/code&gt; 的意思是，排除你输入关键字的文本行。&lt;/p&gt;&#xA;&lt;p&gt;由于这两个命令，运行之后会直接修改文本内容，因此不要直接用于正在使用的业务文件中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>实施加载 Emacs 的包文件</title>
      <link>https://www.gtdstudy.com/posts/emacs-load-library/</link>
      <pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/emacs-load-library/</guid>
      <description>&lt;p&gt;运行这个命令： &lt;code&gt;load-library&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;在调试开发 Emacs 的第三方包时，运行这一个命令可以避免每一次每一次修改都重启 Emacs。&lt;/p&gt;</description>
    </item>
    <item>
      <title>让 org-mode 的 tag 一直处于 Emacs 窗口的最右方</title>
      <link>https://www.gtdstudy.com/posts/org-mode-tag-align-right/</link>
      <pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/org-mode-tag-align-right/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(add-to-list &amp;#39;font-lock-extra-managed-props &amp;#39;display)&#xA;(font-lock-add-keywords &amp;#39;org-mode&#xA;                        `((&amp;#34;^.*?\\( \\)\\(:[[:alnum:]_@#%:]+:\\)$&amp;#34;&#xA;                           (1 `(face nil&#xA;                                     display (space :align-to (- right ,(org-string-width (match-string 2)) 3)))&#xA;                              prepend))) t)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>使用「Shift &#43; 方向键」在 Emacs Calendar 里自由选择日期</title>
      <link>https://www.gtdstudy.com/posts/emacs-calendar-shift-select/</link>
      <pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/emacs-calendar-shift-select/</guid>
      <description>&lt;p&gt;在 org-mode 里，按下 C-c C-s 会出现一个日历视图（Emacs Calendar），可以让人直接输入 +1、+2 这种方式来选择未来的日期。&lt;/p&gt;&#xA;&lt;p&gt;这种方式不够直观、方便，今天发现，在唤出日历视图后，可以直接按着 Shift + 上下左右方向键，将可以自由移动 Emacs Calendar 里的光标，从从容容地选择日日期。&lt;/p&gt;</description>
    </item>
    <item>
      <title>加快 macOS 里光标的移动速度</title>
      <link>https://www.gtdstudy.com/posts/macos-cursor-speed/</link>
      <pubDate>Tue, 17 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/macos-cursor-speed/</guid>
      <description>&lt;p&gt;找到「系统设置（Sytem Setting」里的「键盘（Keyboard）」，将里面的「Key repeat rate」调向 fast 以及「Delay until repeat」调向 short。&lt;/p&gt;&#xA;&lt;p&gt;效果拔群！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ant Design 组件基本分类</title>
      <link>https://www.gtdstudy.com/posts/antd-component-architecture/</link>
      <pubDate>Sun, 24 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/antd-component-architecture/</guid>
      <description>&lt;h2 id=&#34;架构设计&#34;&gt;架构设计&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分层&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基础组件&lt;/li&gt;&#xA;&lt;li&gt;样式体系&lt;/li&gt;&#xA;&lt;li&gt;复合组件&lt;/li&gt;&#xA;&lt;li&gt;业务组件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;解耦&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于每个组件都要定义：样式、ts 类型、基础操作、工具方法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;响应式设计&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;状态管理&#34;&gt;状态管理&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;状态管理&#xA;&lt;ul&gt;&#xA;&lt;li&gt;全局状态：在 react 使用 Context、useSyncExternailStore&lt;/li&gt;&#xA;&lt;li&gt;局部状态：受控组件，非受控组件&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;样式体系与主题设计&#34;&gt;样式体系与主题设计&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Color Tokens : 颜色色值系统&lt;/li&gt;&#xA;&lt;li&gt;样式模块化方案：css-in-js、emotion（建议试一试）、styled-compontents&lt;/li&gt;&#xA;&lt;li&gt;样式优先级与覆盖：控制样式优先级&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>给 Emacs 打 Patch</title>
      <link>https://www.gtdstudy.com/posts/emacs-patch/</link>
      <pubDate>Wed, 06 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/emacs-patch/</guid>
      <description>&lt;p&gt;&lt;strong&gt;来源&lt;/strong&gt;: Telegram 群组 &amp;ldquo;Emacs_CN Lite 轻聊版&amp;rdquo; @Lucius_Chen&lt;/p&gt;&#xA;&lt;p&gt;在 &lt;code&gt;/opt/homebrew/Library/Taps/d12frosted/homebrew-emacs-plus/Formula/&lt;/code&gt; 下的 &lt;code&gt;emacs-plus@31.rb&lt;/code&gt; 文件需要修改 &lt;code&gt;Path&lt;/code&gt; 栏的 &lt;code&gt;local_path&lt;/code&gt; 和 &lt;code&gt;commit&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;如果需要打 patch，可以将 patch 文件放在：&#xA;&lt;code&gt;/opt/homebrew/Library/Taps/d12frosted/homebrew-emacs-plus/patches/emacs-31&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vim 命令 - Scroll &amp; Move</title>
      <link>https://www.gtdstudy.com/posts/vim-scroll-move/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/vim-scroll-move/</guid>
      <description>&lt;h2 id=&#34;scroll&#34;&gt;Scroll&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;滚动一页: &lt;code&gt;C-f&lt;/code&gt; / &lt;code&gt;C-b&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;滚动半页: &lt;code&gt;C-d&lt;/code&gt; / &lt;code&gt;C-u&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;滚动一行: &lt;code&gt;C-e&lt;/code&gt; / &lt;code&gt;C-y&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;navigation&#34;&gt;Navigation&lt;/h2&gt;&#xA;&lt;h3 id=&#34;以词定位&#34;&gt;以词定位&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;下一个单词的开头: &lt;code&gt;w&lt;/code&gt; / &lt;code&gt;W&lt;/code&gt;（&lt;code&gt;W&lt;/code&gt; 更加直接）&lt;/li&gt;&#xA;&lt;li&gt;当前单词的末尾: &lt;code&gt;e&lt;/code&gt; / &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;上一个单词的开头: &lt;code&gt;b&lt;/code&gt; / &lt;code&gt;B&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;以行定位&#34;&gt;以行定位&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;去到行首: &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;去到行尾: &lt;code&gt;$&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;去到第一个非空字符: &lt;code&gt;^&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;去到最后一个非空字符: &lt;code&gt;g_&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;以屏定位&#34;&gt;以屏定位&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;去到当前屏幕中的第一行: &lt;code&gt;H&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;去到当前屏幕的中间一行: &lt;code&gt;M&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;去到当前屏幕的最后一行: &lt;code&gt;L&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>解决一个神出鬼没的 Bug</title>
      <link>https://www.gtdstudy.com/posts/debugging-mysterious-bug/</link>
      <pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/debugging-mysterious-bug/</guid>
      <description>&lt;h2 id=&#34;一句话说明问题&#34;&gt;一句话说明问题&lt;/h2&gt;&#xA;&lt;p&gt;升级 &lt;code&gt;org-zettel-ref-mode&lt;/code&gt; 的数据库格式导致加载数据库的函数无法读取正确的数据库，结果引发内存错误链。报错信息仅显示 &amp;ldquo;let*: End of file during parsing&amp;rdquo;，未提供具体细节。&lt;/p&gt;&#xA;&lt;h2 id=&#34;辛苦的过程&#34;&gt;辛苦的过程&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;起初以为是代码括号匹配问题，检查后无果。&lt;/li&gt;&#xA;&lt;li&gt;Emacs 群中请教后仍未找到问题。&lt;/li&gt;&#xA;&lt;li&gt;尝试将所有 &lt;code&gt;let*&lt;/code&gt; 改为 &lt;code&gt;let&lt;/code&gt;，但问题依旧。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;灵光一闪&#34;&gt;灵光一闪&lt;/h2&gt;&#xA;&lt;p&gt;总结经验后怀疑是别处问题。直接运行导致报错的函数，终于获得详细的错误报告，从而顺利解决问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题分析&#34;&gt;问题分析&lt;/h2&gt;&#xA;&lt;p&gt;关键错误：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;read&lt;/code&gt; 函数失败返回 &lt;code&gt;nil&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;后续试图从 &lt;code&gt;nil&lt;/code&gt; 中获取 &lt;code&gt;:entries&lt;/code&gt;，导致问题传递。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;调用链分析：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;org-zettel-ref-db-load()&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;内部 &lt;code&gt;let*&lt;/code&gt; 执行失败，触发错误。&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>让大陆用户顺利访问部署在 Vercel 上的网站程序</title>
      <link>https://www.gtdstudy.com/posts/vercel-china-access/</link>
      <pubDate>Sun, 20 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/vercel-china-access/</guid>
      <description>&lt;p&gt;在域名服务商的 DNS 记录中使用：&#xA;&lt;code&gt;cname-china.vercel-dns.com&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 Emacs 的 Register 方便工作</title>
      <link>https://www.gtdstudy.com/posts/emacs-register-usage/</link>
      <pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/emacs-register-usage/</guid>
      <description>&lt;p&gt;观看视频 &lt;em&gt;Emacs: Store anything with registers and bookmarks&lt;/em&gt; 后，更清楚 Register 的作用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;register-的特点&#34;&gt;Register 的特点&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;临时保存：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;光标位置&lt;/li&gt;&#xA;&lt;li&gt;窗口布局&lt;/li&gt;&#xA;&lt;li&gt;文件（需自定义命令）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;内容会随 Emacs 重启或被覆盖而丢失。&lt;/li&gt;&#xA;&lt;li&gt;快速覆盖机制适合处理临时性任务。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;register-与-bookmark-的结合&#34;&gt;Register 与 Bookmark 的结合&lt;/h2&gt;&#xA;&lt;p&gt;Register 适合临时任务，Bookmark 可用于长期保存，高效结合使用能提升工作效率。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emacs 不移动光标的情况下滚动行</title>
      <link>https://www.gtdstudy.com/posts/emacs-scroll-line/</link>
      <pubDate>Wed, 16 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/emacs-scroll-line/</guid>
      <description>&lt;p&gt;Emacs 内置了两个命令：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;scroll-up-line&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;scroll-down-line&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>软件工程的性能测试</title>
      <link>https://www.gtdstudy.com/posts/software-engineering-profiler/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/posts/software-engineering-profiler/</guid>
      <description>&lt;p&gt;所有软件工程都应通过 Profiler 测试性能。Emacs 中可以通过以下命令实现：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;启动性能测试: &lt;code&gt;M-x profiler-start&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;选择 CPU 消耗、内存消耗，或 CPU+内存消耗。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>TIL</title>
      <link>https://www.gtdstudy.com/til/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://www.gtdstudy.com/til/</guid>
      <description>&lt;p&gt;TIL = Today I learned&lt;/p&gt;&#xA;&lt;h1 id=&#34;2025-01-21-emacs-中综合使用-keep-lines-和-flush-lines-过滤多行文本&#34;&gt;2025-01-21 Emacs 中综合使用 keep-lines 和 flush-lines 过滤多行文本&lt;/h1&gt;&#xA;&lt;p&gt;如果不想写正则表达式，可以多次使用 keep-lines 和 flush-lines 来达到筛选包含某些关键字的文本行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;keep-lines&lt;/code&gt; 的意思就是，保留你输入关键字的文本行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;flush-lines&lt;/code&gt; 的意思是，排除你输入关键字的文本行。&lt;/p&gt;&#xA;&lt;p&gt;由于这两个命令，运行之后会直接修改文本内容，因此不要直接用于正在使用的业务文件中。&lt;/p&gt;&#xA;&lt;h1 id=&#34;2025-01-20-实施加载-emacs-的包文件&#34;&gt;2025-01-20 实施加载 Emacs 的包文件&lt;/h1&gt;&#xA;&lt;p&gt;运行这个命令： &lt;code&gt;load-library&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;在调试开发 Emacs 的第三方包时，运行这一个命令可以避免每一次每一次修改都重启 Emacs。&lt;/p&gt;&#xA;&lt;h1 id=&#34;2025-01-02-让-org-mode-的-tag-一直处于-emacs-窗口的最右方&#34;&gt;2025-01-02 让 org-mode 的 tag 一直处于 Emacs 窗口的最右方&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(add-to-list &amp;#39;font-lock-extra-managed-props &amp;#39;display)&#xA;(font-lock-add-keywords &amp;#39;org-mode&#xA;                        `((&amp;#34;^.*?\\( \\)\\(:[[:alnum:]_@#%:]+:\\)$&amp;#34;&#xA;                           (1 `(face nil&#xA;                                     display (space :align-to (- right ,(org-string-width (match-string 2)) 3)))&#xA;                              prepend))) t)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;2024-12-17-加快-macos-里光标的移动速度&#34;&gt;2024-12-17 加快 macOS 里光标的移动速度&lt;/h1&gt;&#xA;&lt;p&gt;找到「系统设置（Sytem Setting」里的「键盘（Keyboard）」，将里面的「Key repeat rate」调向 fast 以及「Delay until repeat」调向 short。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何在 M1 MacBook 上玩游戏</title>
      <link>https://www.gtdstudy.com/posts/how-to-play-games-with-m1-macbook/</link>
      <pubDate>Fri, 09 Sep 2022 16:53:38 +0800</pubDate>
      <guid>https://www.gtdstudy.com/posts/how-to-play-games-with-m1-macbook/</guid>
      <description>&lt;p&gt;因为把 Switch 留在了深圳，我不得不开发在 MacBook 上玩游戏的技能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;windows-游戏&#34;&gt;Windows 游戏&lt;/h2&gt;&#xA;&lt;p&gt;直接下载 Steam 的 Mac 版，会失望的发现，很多好玩的游戏，平台只支持 Windows。所以，参考 2 条哔哩哔哩的视频教程，一步一步跟着走：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1yZ4y1D74K?vd_source=1f7b4ab69df0282a1f07c30f52428cfa&#34;&gt;【Mac 玩游戏】Crossover 21.1 教程 安装最新的 DXVK 玩 Windows 游戏&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;阿婆主叫 js-john，是一名旅居日本的程序员，他还做了一个叫 &lt;a href=&#34;https://isign.ren/#/&#34;&gt;iSign签名网&lt;/a&gt; 的网站，帮人安装 App Store 以外的 App，而且可以帮助苹果开发者分成。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://space.bilibili.com/131564072/channel/collectiondetail?sid=604200&#34;&gt;处之漠然的 CrossOver 教程合集&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;阿婆主叫「处之漠然」，她的教程非常详细，如果担心自己的步骤出错了，可以对照着做。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;要点&#34;&gt;要点&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CrossOver 需付费购买，自行准备好钱钱钱。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CrossOver 要从海外官网购买和下载，地址在 &lt;a href=&#34;https://www.codeweavers.com/&#34;&gt;CodeWeavers&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;国内版是海外版的阉割版，功能不全，为了避免意外发生，最好是下载海外版。&lt;/p&gt;&#xA;&lt;p&gt;由于点击官网的购买按钮，会跳转到中文购买页面，请自备梯子，并开启全局模式。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;必须更新视频中提到的 2 个插件：&lt;/p&gt;&#xA;&lt;p&gt;DXVK：&lt;a href=&#34;https://github.com/marzent/dxvk/releases&#34;&gt;https://github.com/marzent/dxvk/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;MoltenVK：&lt;a href=&#34;https://github.com/Gcenx/MoltenVK/releases&#34;&gt;https://github.com/Gcenx/MoltenVK/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;上不了 Github 的得自己想办法。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;关于游戏兼容性，可以查：&#xA;&lt;a href=&#34;https://www.applegamingwiki.com/wiki/Home&#34;&gt;https://www.applegamingwiki.com/wiki/Home&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;one-more-thing&#34;&gt;one more thing…&lt;/h3&gt;&#xA;&lt;p&gt;很神奇的是，用 Windows 虚拟机来玩游戏，要比 macOS 原生的流畅多了，发热也不严重。&lt;/p&gt;&#xA;&lt;p&gt;只能说，大部分游戏对 macOS 的优化做得很差。&lt;/p&gt;&#xA;&lt;h2 id=&#34;主机游戏&#34;&gt;主机游戏&lt;/h2&gt;&#xA;&lt;p&gt;除了 PC 大作之外，也可以考虑主机游戏，很多经典神作让玩家沉浸在无与伦比的体验中，值得一再回味。比如我之前沉迷的《皇家骑士团 2》。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenEmu/OpenEmu&#34;&gt;OpenEmu: 🕹 Retro video game emulation for macOS&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>PhotoShop：如何画优美的曲线</title>
      <link>https://www.gtdstudy.com/posts/how-to-draw-bezier-curve/</link>
      <pubDate>Sun, 08 May 2022 23:23:16 +0800</pubDate>
      <guid>https://www.gtdstudy.com/posts/how-to-draw-bezier-curve/</guid>
      <description>&lt;p&gt;原来 PhotoShop 里的钢笔工具，是贝济埃曲线（又称贝塞尔曲线）的应用，所以用好钢笔工具，应该用符合绘制贝济埃曲线的方法，这样子会比较容易得到好的结果。&lt;/p&gt;&#xA;&lt;p&gt;通过 B 站的 &lt;a href=&#34;https://www.bilibili.com/video/BV19i4y1c76i/?spm_id_from=autoNext&#34;&gt;oooooohmygosh&lt;/a&gt; 学习到，画贝济埃曲线的规范：&#xA;1、尽量让节点放在「极值点」的位置&#xA;2、让节点和手柄保持水平或垂直对齐&lt;/p&gt;&#xA;&lt;p&gt;这样只需要调整手柄长度，拟合自己想要的曲率。&lt;/p&gt;&#xA;&lt;h2 id=&#34;小知识&#34;&gt;小知识&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://baike.baidu.com/item/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF/1091769&#34;&gt;贝塞尔曲线&lt;/a&gt;于 1962，由法国工程师皮埃尔·贝塞尔（Pierre Bézier）所广泛发表，他运用贝塞尔曲线来为汽车的主体进行设计。贝塞尔曲线最初由 Paul de Casteljau 于 1959 年运用 de Casteljau 演算法开发，以稳定数值的方法求出贝兹曲线。中文名贝塞尔曲线外文名(Bézier curve&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wi-F：如何寻找 Wi-Fi 密码</title>
      <link>https://www.gtdstudy.com/posts/how-to-find-wifi-password/</link>
      <pubDate>Sun, 08 May 2022 23:12:32 +0800</pubDate>
      <guid>https://www.gtdstudy.com/posts/how-to-find-wifi-password/</guid>
      <description>&lt;h2 id=&#34;windows&#34;&gt;Windows&lt;/h2&gt;&#xA;&lt;p&gt;进入 “网络和共享中心” 菜单。右键单击 Wi-Fi 网络连接图标→“无线网络属性”。点击 “显示字符” 字段，显示 Wi-Fi 网络密码。&lt;/p&gt;&#xA;&lt;h2 id=&#34;macos&#34;&gt;macOS&lt;/h2&gt;&#xA;&lt;p&gt;所有密码都存储在钥匙串应用程序中。使用 Spotlight 搜索 “Keychain Access”。打开该应用程序，在保存的凭证列表中找到 Wi-Fi 网络名称。双击它，然后在字段中点击查看密码（这需要输入操作系统密码）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>苹果：Mac Studio 为何不能更换普通的 SSD 硬盘</title>
      <link>https://www.gtdstudy.com/posts/why-mac-studio-can-not-change-ssds/</link>
      <pubDate>Sat, 26 Mar 2022 23:04:47 +0800</pubDate>
      <guid>https://www.gtdstudy.com/posts/why-mac-studio-can-not-change-ssds/</guid>
      <description>&lt;p&gt;极客风范浓厚醇正的 &lt;a href=&#34;https://arstechnica.com/gadgets/2022/03/explaining-the-mac-studios-removable-ssds-and-why-you-cant-just-swap-them-out/&#34;&gt;ArsTechnica&lt;/a&gt; 也注意到 Mac Studio 不能随意更换 SSD 硬盘一事。它给出了一个很简单的答案：&lt;/p&gt;&#xA;&lt;p&gt;所有 SSD 硬盘的结构至少包含 2 样东西，用于存储数据 NAND 芯片和 SSD 控制芯片。在 PC 上，SSD 硬盘基本都包含这两样，所以它们更换起来很方便。&lt;/p&gt;&#xA;&lt;p&gt;但苹果在推出 T2 芯片之后，选择「功能集成到一个芯片里」，SSD 控制芯片的功能也不例外，被苹果集成在 T2，以及后续的 M1 系列里。&lt;/p&gt;&#xA;&lt;p&gt;所以，Mac Studio 上的 SSD 硬盘，只有 NANO 芯片外加一个称为「raw NAND controller/bridge」的东西。而在实际测试的时候，即便采用和 Mac Studio 同样 NANO 芯片的 SSD 硬盘，Mac Studio 也无法识别。因此，很有可能 M1 里所设计的 SSD 控制功能，是将特定的 NAND 芯片和特定的系统设置搭配起来。因此，哪一方面不一致，都会导致 Mac Studio 无法识别 SSD 硬盘。&lt;/p&gt;&#xA;&lt;p&gt;其实 Mac Studio 不能更换普通的 SSD 硬盘，并非什么大事，但我之所以感兴趣，是发现苹果的软硬结合达到了一个新的高度。M1 系列，我认为是奠定苹果在硬件方面进行创新的平台，然而，苹果并不单纯追求更快更强，而是不断尝试通过软件来定义硬件的功能，比如 Hand-On、AirPods 上特定推出的空间音频等等。这要求硬件本身功能具备平台性，可编程性——我想这是为什么苹果从 2011 年开始不断投入，研发芯片的原因。&lt;/p&gt;&#xA;&lt;p&gt;以芯片作为平台，通过软件开发、定义、控制硬件的功能，这让苹果的创新具备更强的独特性，以及广泛性——从 M1 系列开始，苹果可以说，超越当今整整一个时代。&lt;/p&gt;</description>
    </item>
    <item>
      <title>图床：把 Github 当做博客图床</title>
      <link>https://www.gtdstudy.com/posts/how-to-make-github-to-be-your-blog-image-server/</link>
      <pubDate>Fri, 04 Feb 2022 11:37:52 +0800</pubDate>
      <guid>https://www.gtdstudy.com/posts/how-to-make-github-to-be-your-blog-image-server/</guid>
      <description>&lt;p&gt;我之前的博客基本以纯文字为主，但最近因为博客新开了「产品」和「技巧」这两个分类，为了「把事情说明白」，发现还是需要「文字+图片」。由于本博客没有采用博客服务（比如 WordPress），就存在图片放哪儿的问题。&lt;/p&gt;&#xA;&lt;p&gt;幸运的是，我发现通过 PicGo 可以方便地将图片上传到 Github 上，只需要自己设置一个「仓库」，生成「token」即可。&lt;/p&gt;&#xA;&lt;p&gt;1、首先，注册一个 Github 账号&lt;/p&gt;&#xA;&lt;p&gt;2、新设一个仓库（New repository），或在原有的仓库之下，设立一个新的分支（New repo）。参考&lt;a href=&#34;https://raw.githubusercontent.com/yibie/blogimag/main/%E6%88%AA%E5%B1%8F2022-02-04%20%E4%B8%8A%E5%8D%8811.03.27.png&#34;&gt;图片&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;3、生成一个 token，生成一个 token 时，需要把「repo」选项全部勾上。参考 PicGo 的&lt;a href=&#34;https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A&#34;&gt;教程&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;4、打开 PicGo 详细窗口，把 Github 作为图床选上。&lt;/p&gt;&#xA;&lt;p&gt;以后需要的图片，就只需要拖动到 PicGo 的上传窗口，就能自动获取图片链接——PicGo 还支持直接导出 MarkDown 或 HTML 等格式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PhotoShop：通过「色彩范围」工具来快速抠图的方法</title>
      <link>https://www.gtdstudy.com/posts/photoshop-tips-1-fast-cutout/</link>
      <pubDate>Sat, 29 Jan 2022 20:28:54 +0800</pubDate>
      <guid>https://www.gtdstudy.com/posts/photoshop-tips-1-fast-cutout/</guid>
      <description>&lt;p&gt;今天看了少数派的《&lt;a href=&#34;https://sspai.com/post/71224&#34;&gt;Keynote 贺卡制作指南&lt;/a&gt;》，用里面的 PhotoShop 抠图小技巧，顺利地制作了属于自己的拜年贺卡。&lt;/p&gt;&#xA;&lt;p&gt;技巧记录如下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;将图片导入 PhotoShop&lt;/li&gt;&#xA;&lt;li&gt;在图层工具栏里，解锁图层&lt;/li&gt;&#xA;&lt;li&gt;然后在「选择」菜单下找到「色彩范围」&lt;/li&gt;&#xA;&lt;li&gt;唤出「色彩范围」工具栏之后，把拾色器放在抠图的对象上&lt;/li&gt;&#xA;&lt;li&gt;如果发现要抠的对象，在工具栏下方的预览里显示，并不完全&lt;/li&gt;&#xA;&lt;li&gt;可调整「色彩范围」工具栏里的「颜色容差」的数值，直到预览里展示完全&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;该技巧有局限性，它比较适合抠那种纯色的东西，比如 LOGO、ICON 等等，如果是色彩丰富一点的，就不行了。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
